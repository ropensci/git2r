# Generated by roxygen2: do not edit by hand

S3method(print,git_config)
S3method(print,git_reflog)
S3method(print,git_status)
export(config)
export(cred_ssh_key)
export(cred_token)
export(git_connection)
export(is.git)
export(is_blob)
export(is_branch)
export(is_commit)
export(is_tree)
export(last_commit)
export(libgit2_features)
export(libgit2_sha)
export(libgit2_version)
export(punch_card)
export(remote_ls)
export(ssl_cert_locations)
exportClasses(cred_env)
exportClasses(cred_ssh_key)
exportClasses(cred_token)
exportClasses(cred_user_pass)
exportClasses(git_blame)
exportClasses(git_blame_hunk)
exportClasses(git_blob)
exportClasses(git_branch)
exportClasses(git_commit)
exportClasses(git_connection)
exportClasses(git_diff)
exportClasses(git_diff_file)
exportClasses(git_diff_hunk)
exportClasses(git_diff_line)
exportClasses(git_fetch_head)
exportClasses(git_merge_result)
exportClasses(git_note)
exportClasses(git_reference)
exportClasses(git_reflog_entry)
exportClasses(git_repository)
exportClasses(git_signature)
exportClasses(git_stash)
exportClasses(git_tag)
exportClasses(git_time)
exportClasses(git_transfer_progress)
exportClasses(git_tree)
exportMethods("[")
exportMethods(add)
exportMethods(ahead_behind)
exportMethods(blame)
exportMethods(blob_create)
exportMethods(branch_create)
exportMethods(branch_delete)
exportMethods(branch_get_upstream)
exportMethods(branch_remote_name)
exportMethods(branch_remote_url)
exportMethods(branch_rename)
exportMethods(branch_set_upstream)
exportMethods(branch_target)
exportMethods(branches)
exportMethods(bundle_r_package)
exportMethods(checkout)
exportMethods(clone)
exportMethods(commit)
exportMethods(commits)
exportMethods(content)
exportMethods(contributions)
exportMethods(cred_env)
exportMethods(cred_user_pass)
exportMethods(default_signature)
exportMethods(descendant_of)
exportMethods(diff)
exportMethods(discover_repository)
exportMethods(fetch)
exportMethods(fetch_heads)
exportMethods(git_recent)
exportMethods(git_sha)
exportMethods(hash)
exportMethods(hashfile)
exportMethods(head)
exportMethods(in_repository)
exportMethods(index_remove_bypath)
exportMethods(init)
exportMethods(is_bare)
exportMethods(is_binary)
exportMethods(is_detached)
exportMethods(is_empty)
exportMethods(is_head)
exportMethods(is_local)
exportMethods(is_merge)
exportMethods(is_shallow)
exportMethods(length)
exportMethods(list_files_git)
exportMethods(lookup)
exportMethods(merge)
exportMethods(merge_base)
exportMethods(note_create)
exportMethods(note_default_ref)
exportMethods(note_remove)
exportMethods(notes)
exportMethods(odb_blobs)
exportMethods(odb_objects)
exportMethods(parents)
exportMethods(plot)
exportMethods(pull)
exportMethods(punch_card)
exportMethods(push)
exportMethods(read_delim_git)
exportMethods(references)
exportMethods(reflog)
exportMethods(remote_add)
exportMethods(remote_ls)
exportMethods(remote_remove)
exportMethods(remote_rename)
exportMethods(remote_set_url)
exportMethods(remote_url)
exportMethods(remotes)
exportMethods(remove_files_git)
exportMethods(repository)
exportMethods(reset)
exportMethods(revparse_single)
exportMethods(rm_file)
exportMethods(show)
exportMethods(stash)
exportMethods(stash_drop)
exportMethods(stash_list)
exportMethods(status)
exportMethods(summary)
exportMethods(tag)
exportMethods(tag_delete)
exportMethods(tags)
exportMethods(tree)
exportMethods(when)
exportMethods(workdir)
exportMethods(write_delim_git)
import(methods)
importFrom(assertthat,assert_that)
importFrom(assertthat,has_name)
importFrom(assertthat,is.flag)
importFrom(assertthat,is.string)
importFrom(assertthat,noNA)
importFrom(graphics,axis)
importFrom(graphics,barplot)
importFrom(graphics,par)
importFrom(graphics,plot.new)
importFrom(graphics,plot.window)
importFrom(graphics,symbols)
importFrom(methods,new)
importFrom(methods,setClass)
importFrom(methods,setClassUnion)
importFrom(methods,setGeneric)
importFrom(methods,setMethod)
importFrom(methods,setValidity)
importFrom(utils,capture.output)
importFrom(utils,file_test)
importFrom(utils,read.delim)
importFrom(utils,read.table)
importFrom(utils,sessionInfo)
importFrom(utils,write.table)
useDynLib(git2r, .registration=TRUE)
